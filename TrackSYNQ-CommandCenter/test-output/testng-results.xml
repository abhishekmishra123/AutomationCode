<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="5" total="35" passed="29">
  <reporter-output>
  </reporter-output>
  <suite name="TrackSYNQ Test Suite" duration-ms="928450" started-at="2019-10-10T11:13:18 EDT" finished-at="2019-10-10T11:28:46 EDT">
    <groups>
    </groups>
    <test name="Login Test" duration-ms="928450" started-at="2019-10-10T11:13:18 EDT" finished-at="2019-10-10T11:28:46 EDT">
      <class name="TestCases.ReportLogsTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.ReportLogsTest@48524010]" name="beforeMethod" is-config="true" duration-ms="1404" started-at="2019-10-10T11:15:26 EDT" finished-at="2019-10-10T11:15:28 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.ReportLogsTest.Verify_the_Report_Logs_Navigation_bar_link_functionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_the_Report_Logs_Navigation_bar_link_functionality()[pri:0, instance:TestCases.ReportLogsTest@48524010]" name="Verify_the_Report_Logs_Navigation_bar_link_functionality" duration-ms="24946" started-at="2019-10-10T11:15:28 EDT" description="TC_ReportLogs_095 To verify the &#039;Report Logs&#039; Navigation bar link  functionality" finished-at="2019-10-10T11:15:53 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_the_Report_Logs_Navigation_bar_link_functionality -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.ReportLogsTest@48524010]" name="afterMethod" is-config="true" duration-ms="430" started-at="2019-10-10T11:15:53 EDT" finished-at="2019-10-10T11:15:53 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_the_Report_Logs_Navigation_bar_link_functionality status=SUCCESS method=ReportLogsTest.Verify_the_Report_Logs_Navigation_bar_link_functionality()[pri:0, instance:TestCases.ReportLogsTest@48524010] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.ReportLogsTest@48524010]" name="beforeMethod" is-config="true" duration-ms="696" started-at="2019-10-10T11:15:53 EDT" finished-at="2019-10-10T11:15:54 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.ReportLogsTest.Verify_the_UI_of_Report_Logs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_the_UI_of_Report_Logs()[pri:1, instance:TestCases.ReportLogsTest@48524010]" name="Verify_the_UI_of_Report_Logs" duration-ms="25740" started-at="2019-10-10T11:15:54 EDT" description="TC_ReportLogs_096 To verify the UI of &#039;Report Logs" finished-at="2019-10-10T11:16:19 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_the_UI_of_Report_Logs -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.ReportLogsTest@48524010]" name="afterMethod" is-config="true" duration-ms="307" started-at="2019-10-10T11:16:19 EDT" finished-at="2019-10-10T11:16:20 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_the_UI_of_Report_Logs status=SUCCESS method=ReportLogsTest.Verify_the_UI_of_Report_Logs()[pri:1, instance:TestCases.ReportLogsTest@48524010] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.ReportLogsTest@48524010]" name="beforeMethod" is-config="true" duration-ms="650" started-at="2019-10-10T11:16:20 EDT" finished-at="2019-10-10T11:16:20 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.ReportLogsTest.Verify_Email_On_demands_download_UI()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_Email_On_demands_download_UI()[pri:2, instance:TestCases.ReportLogsTest@48524010]" name="Verify_Email_On_demands_download_UI" duration-ms="26185" started-at="2019-10-10T11:16:20 EDT" description="TC_ReportLogs_097 To verify &#039;Email On demands download&#039; UI" finished-at="2019-10-10T11:16:47 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_Email_On_demands_download_UI -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.ReportLogsTest@48524010]" name="afterMethod" is-config="true" duration-ms="359" started-at="2019-10-10T11:16:47 EDT" finished-at="2019-10-10T11:16:47 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_Email_On_demands_download_UI status=SUCCESS method=ReportLogsTest.Verify_Email_On_demands_download_UI()[pri:2, instance:TestCases.ReportLogsTest@48524010] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.ReportLogsTest@48524010]" name="beforeMethod" is-config="true" duration-ms="602" started-at="2019-10-10T11:16:47 EDT" finished-at="2019-10-10T11:16:48 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.ReportLogsTest.Verify_Send_Report_button_functionality_on_Email_On_Demand_download_Popup_if_left_empty_email_field()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_Send_Report_button_functionality_on_Email_On_Demand_download_Popup_if_left_empty_email_field()[pri:3, instance:TestCases.ReportLogsTest@48524010]" name="Verify_Send_Report_button_functionality_on_Email_On_Demand_download_Popup_if_left_empty_email_field" duration-ms="27392" started-at="2019-10-10T11:16:48 EDT" description="TC_ReportLogs_098 To verify &#039;Send Report&#039; button functionality on &#039;Email On Demand download&#039;  Popup if left empty email field" finished-at="2019-10-10T11:17:15 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_Send_Report_button_functionality_on_Email_On_Demand_download_Popup_if_left_empty_email_field -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.ReportLogsTest@48524010]" name="afterMethod" is-config="true" duration-ms="384" started-at="2019-10-10T11:17:15 EDT" finished-at="2019-10-10T11:17:15 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_Send_Report_button_functionality_on_Email_On_Demand_download_Popup_if_left_empty_email_field status=SUCCESS method=ReportLogsTest.Verify_Send_Report_button_functionality_on_Email_On_Demand_download_Popup_if_left_empty_email_field()[pri:3, instance:TestCases.ReportLogsTest@48524010] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.ReportLogsTest@48524010]" name="beforeMethod" is-config="true" duration-ms="614" started-at="2019-10-10T11:17:15 EDT" finished-at="2019-10-10T11:17:16 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.ReportLogsTest.Verify_PDF_download()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_PDF_download()[pri:5, instance:TestCases.ReportLogsTest@48524010]" name="Verify_PDF_download" duration-ms="29433" started-at="2019-10-10T11:17:16 EDT" description="TC_ReportLogs_100 To verify_PDF_download" finished-at="2019-10-10T11:17:45 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_PDF_download -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.ReportLogsTest@48524010]" name="afterMethod" is-config="true" duration-ms="344" started-at="2019-10-10T11:17:45 EDT" finished-at="2019-10-10T11:17:46 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_PDF_download status=SUCCESS method=ReportLogsTest.Verify_PDF_download()[pri:5, instance:TestCases.ReportLogsTest@48524010] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.ReportLogsTest@48524010]" name="beforeMethod" is-config="true" duration-ms="620" started-at="2019-10-10T11:17:46 EDT" finished-at="2019-10-10T11:17:46 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.ReportLogsTest.Verify_CSV_download_functionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_CSV_download_functionality()[pri:6, instance:TestCases.ReportLogsTest@48524010]" name="Verify_CSV_download_functionality" duration-ms="29563" started-at="2019-10-10T11:17:46 EDT" description="TC_ReportLogs_101 To Verify &#039;CSV&#039;  download functionality " finished-at="2019-10-10T11:18:16 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_CSV_download_functionality -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.ReportLogsTest@48524010]" name="afterMethod" is-config="true" duration-ms="380" started-at="2019-10-10T11:18:16 EDT" finished-at="2019-10-10T11:18:16 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_CSV_download_functionality status=SUCCESS method=ReportLogsTest.Verify_CSV_download_functionality()[pri:6, instance:TestCases.ReportLogsTest@48524010] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.ReportLogsTest@48524010]" name="beforeMethod" is-config="true" duration-ms="649" started-at="2019-10-10T11:18:16 EDT" finished-at="2019-10-10T11:18:17 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.ReportLogsTest.Verify_HTML_download_functionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_HTML_download_functionality()[pri:7, instance:TestCases.ReportLogsTest@48524010]" name="Verify_HTML_download_functionality" duration-ms="29432" started-at="2019-10-10T11:18:17 EDT" description="TC_ReportLogs_102 To verify &#039;HTML download&#039; functionality" finished-at="2019-10-10T11:18:46 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_HTML_download_functionality -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.ReportLogsTest@48524010]" name="afterMethod" is-config="true" duration-ms="400" started-at="2019-10-10T11:18:46 EDT" finished-at="2019-10-10T11:18:47 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_HTML_download_functionality status=SUCCESS method=ReportLogsTest.Verify_HTML_download_functionality()[pri:7, instance:TestCases.ReportLogsTest@48524010] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.ReportLogsTest@48524010]" name="beforeMethod" is-config="true" duration-ms="585" started-at="2019-10-10T11:18:47 EDT" finished-at="2019-10-10T11:18:47 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.ReportLogsTest.Verify_the_search_functionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_the_search_functionality()[pri:8, instance:TestCases.ReportLogsTest@48524010]" name="Verify_the_search_functionality" duration-ms="24799" started-at="2019-10-10T11:18:47 EDT" description="TC_ReportLogs_103 To verify the search functionality " finished-at="2019-10-10T11:19:12 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_the_search_functionality -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.ReportLogsTest@48524010]" name="afterMethod" is-config="true" duration-ms="364" started-at="2019-10-10T11:19:12 EDT" finished-at="2019-10-10T11:19:13 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_the_search_functionality status=SUCCESS method=ReportLogsTest.Verify_the_search_functionality()[pri:8, instance:TestCases.ReportLogsTest@48524010] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.ReportLogsTest@48524010]" name="beforeMethod" is-config="true" duration-ms="620" started-at="2019-10-10T11:19:13 EDT" finished-at="2019-10-10T11:19:13 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.ReportLogsTest.Verify_the_pagination_functionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_the_pagination_functionality()[pri:9, instance:TestCases.ReportLogsTest@48524010]" name="Verify_the_pagination_functionality" duration-ms="158620" started-at="2019-10-10T11:19:13 EDT" description="TC_ReportLogs_104 To verify the pagination functionality" finished-at="2019-10-10T11:21:52 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_the_pagination_functionality -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.ReportLogsTest@48524010]" name="afterMethod" is-config="true" duration-ms="338" started-at="2019-10-10T11:21:52 EDT" finished-at="2019-10-10T11:21:52 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_the_pagination_functionality status=SUCCESS method=ReportLogsTest.Verify_the_pagination_functionality()[pri:9, instance:TestCases.ReportLogsTest@48524010] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.ReportLogsTest@48524010]" name="beforeMethod" is-config="true" duration-ms="727" started-at="2019-10-10T11:21:52 EDT" finished-at="2019-10-10T11:21:53 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.ReportLogsTest.Verify_Send_Report_button_functionality_on_Email_on_Demand_download_Popup_if_Fill_up_email_field()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_Send_Report_button_functionality_on_Email_on_Demand_download_Popup_if_Fill_up_email_field()[pri:10, instance:TestCases.ReportLogsTest@48524010]" name="Verify_Send_Report_button_functionality_on_Email_on_Demand_download_Popup_if_Fill_up_email_field" duration-ms="45223" started-at="2019-10-10T11:21:53 EDT" description="TC_ReportLogs_099 To verify &#039;Send Report&#039; button functionality on &#039;Email on Demand download&#039; Popup if Fill-up email field " finished-at="2019-10-10T11:22:38 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_Send_Report_button_functionality_on_Email_on_Demand_download_Popup_if_Fill_up_email_field -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.ReportLogsTest@48524010]" name="afterMethod" is-config="true" duration-ms="322" started-at="2019-10-10T11:22:38 EDT" finished-at="2019-10-10T11:22:38 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_Send_Report_button_functionality_on_Email_on_Demand_download_Popup_if_Fill_up_email_field status=SUCCESS method=ReportLogsTest.Verify_Send_Report_button_functionality_on_Email_on_Demand_download_Popup_if_Fill_up_email_field()[pri:10, instance:TestCases.ReportLogsTest@48524010] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.ReportLogsTest -->
      <class name="TestCases.TripStopDetailedTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="beforeMethod" is-config="true" duration-ms="977" started-at="2019-10-10T11:22:38 EDT" finished-at="2019-10-10T11:22:39 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TripStopDetailedTest.Verify_the_Reports_navigation_bar()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_the_Reports_navigation_bar()[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="Verify_the_Reports_navigation_bar" duration-ms="53057" started-at="2019-10-10T11:22:39 EDT" description="TC_Reports_001 To verify the &#039;Reports&#039; navigation bar" finished-at="2019-10-10T11:23:32 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_the_Reports_navigation_bar -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="afterMethod" is-config="true" duration-ms="298" started-at="2019-10-10T11:23:32 EDT" finished-at="2019-10-10T11:23:33 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_the_Reports_navigation_bar status=SUCCESS method=TripStopDetailedTest.Verify_the_Reports_navigation_bar()[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="beforeMethod" is-config="true" duration-ms="679" started-at="2019-10-10T11:23:33 EDT" finished-at="2019-10-10T11:23:33 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TripStopDetailedTest.Verify_the_UI_of_Trip_Stop_Detailed_page()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_the_UI_of_Trip_Stop_Detailed_page()[pri:1, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="Verify_the_UI_of_Trip_Stop_Detailed_page" duration-ms="41705" started-at="2019-10-10T11:23:33 EDT" description="TC_Reports_Trip Stop Detailed_002 Stop Detailed_002 To verify the &#039;UI&#039; of &#039;Trip Stop Detailed&#039; page" finished-at="2019-10-10T11:24:15 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_the_UI_of_Trip_Stop_Detailed_page -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="afterMethod" is-config="true" duration-ms="291" started-at="2019-10-10T11:24:15 EDT" finished-at="2019-10-10T11:24:15 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_the_UI_of_Trip_Stop_Detailed_page status=SUCCESS method=TripStopDetailedTest.Verify_the_UI_of_Trip_Stop_Detailed_page()[pri:1, instance:TestCases.TripStopDetailedTest@4b168fa9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="beforeMethod" is-config="true" duration-ms="689" started-at="2019-10-10T11:24:15 EDT" finished-at="2019-10-10T11:24:16 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TripStopDetailedTest.Verify_the_Placeholder_in_all_field_on_Trip_Stop_Detailed_page()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_the_Placeholder_in_all_field_on_Trip_Stop_Detailed_page()[pri:2, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="Verify_the_Placeholder_in_all_field_on_Trip_Stop_Detailed_page" duration-ms="25880" started-at="2019-10-10T11:24:16 EDT" description="TC_Reports_Trip_Stop_Detailed_003 To verify the &#039;Placeholder&#039; in all field on &#039;Trip Stop Detailed&#039; page" finished-at="2019-10-10T11:24:42 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_the_Placeholder_in_all_field_on_Trip_Stop_Detailed_page -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="afterMethod" is-config="true" duration-ms="335" started-at="2019-10-10T11:24:42 EDT" finished-at="2019-10-10T11:24:42 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_the_Placeholder_in_all_field_on_Trip_Stop_Detailed_page status=SUCCESS method=TripStopDetailedTest.Verify_the_Placeholder_in_all_field_on_Trip_Stop_Detailed_page()[pri:2, instance:TestCases.TripStopDetailedTest@4b168fa9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="beforeMethod" is-config="true" duration-ms="689" started-at="2019-10-10T11:24:42 EDT" finished-at="2019-10-10T11:24:43 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TripStopDetailedTest.Verify_the_validation_message_in_all_field_on_Trip_Stop_Detailed_page()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_the_validation_message_in_all_field_on_Trip_Stop_Detailed_page()[pri:3, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="Verify_the_validation_message_in_all_field_on_Trip_Stop_Detailed_page" duration-ms="28420" started-at="2019-10-10T11:24:43 EDT" description="TC_Reports_TripStopDetailed_004 To verify the validation message in all field on &#039;Trip Stop Detailed&#039; page" finished-at="2019-10-10T11:25:11 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_the_validation_message_in_all_field_on_Trip_Stop_Detailed_page -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="afterMethod" is-config="true" duration-ms="309" started-at="2019-10-10T11:25:11 EDT" finished-at="2019-10-10T11:25:12 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_the_validation_message_in_all_field_on_Trip_Stop_Detailed_page status=SUCCESS method=TripStopDetailedTest.Verify_the_validation_message_in_all_field_on_Trip_Stop_Detailed_page()[pri:3, instance:TestCases.TripStopDetailedTest@4b168fa9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="beforeMethod" is-config="true" duration-ms="611" started-at="2019-10-10T11:25:12 EDT" finished-at="2019-10-10T11:25:12 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TripStopDetailedTest.Verify_the_Email_on_Demand_tooltip()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_the_Email_on_Demand_tooltip()[pri:4, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="Verify_the_Email_on_Demand_tooltip" duration-ms="21749" started-at="2019-10-10T11:25:12 EDT" description="TC_Reports_TripStopDetailed_005 To verify_the_Email_on_Demand_tooltip" finished-at="2019-10-10T11:25:34 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_the_Email_on_Demand_tooltip -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="afterMethod" is-config="true" duration-ms="332" started-at="2019-10-10T11:25:34 EDT" finished-at="2019-10-10T11:25:34 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_the_Email_on_Demand_tooltip status=SUCCESS method=TripStopDetailedTest.Verify_the_Email_on_Demand_tooltip()[pri:4, instance:TestCases.TripStopDetailedTest@4b168fa9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="beforeMethod" is-config="true" duration-ms="642" started-at="2019-10-10T11:25:34 EDT" finished-at="2019-10-10T11:25:35 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TripStopDetailedTest.Verify_the_PDF_tooltip()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_the_PDF_tooltip()[pri:5, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="Verify_the_PDF_tooltip" duration-ms="21536" started-at="2019-10-10T11:25:35 EDT" description="TC_Reports_Trip Stop Detailed_006 To verify_the_PDF_tooltip" finished-at="2019-10-10T11:25:57 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_the_PDF_tooltip -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="afterMethod" is-config="true" duration-ms="359" started-at="2019-10-10T11:25:57 EDT" finished-at="2019-10-10T11:25:57 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_the_PDF_tooltip status=SUCCESS method=TripStopDetailedTest.Verify_the_PDF_tooltip()[pri:5, instance:TestCases.TripStopDetailedTest@4b168fa9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="beforeMethod" is-config="true" duration-ms="612" started-at="2019-10-10T11:25:57 EDT" finished-at="2019-10-10T11:25:58 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TripStopDetailedTest.Verify_the_CSV_tooltip()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="Verify_the_CSV_tooltip()[pri:6, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="Verify_the_CSV_tooltip" duration-ms="21530" started-at="2019-10-10T11:25:58 EDT" description="TC_Reports_Trip Stop Detailed_007 To verify_the_CSV_tooltip" finished-at="2019-10-10T11:26:19 EDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Export CSV] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Export CSV] but found []
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at TestCases.TripStopDetailedTest.Verify_the_CSV_tooltip(TripStopDetailedTest.java:283)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_the_CSV_tooltip -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="afterMethod" is-config="true" duration-ms="320" started-at="2019-10-10T11:26:19 EDT" finished-at="2019-10-10T11:26:19 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_the_CSV_tooltip status=FAILURE method=TripStopDetailedTest.Verify_the_CSV_tooltip()[pri:6, instance:TestCases.TripStopDetailedTest@4b168fa9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="beforeMethod" is-config="true" duration-ms="699" started-at="2019-10-10T11:26:19 EDT" finished-at="2019-10-10T11:26:20 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TripStopDetailedTest.Verify_the_HTML_tooltip()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_the_HTML_tooltip()[pri:7, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="Verify_the_HTML_tooltip" duration-ms="21439" started-at="2019-10-10T11:26:20 EDT" description="TC_Reports_Trip Stop Detailed_008 To verify_the_HTML_tooltip" finished-at="2019-10-10T11:26:42 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_the_HTML_tooltip -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="afterMethod" is-config="true" duration-ms="335" started-at="2019-10-10T11:26:42 EDT" finished-at="2019-10-10T11:26:42 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_the_HTML_tooltip status=SUCCESS method=TripStopDetailedTest.Verify_the_HTML_tooltip()[pri:7, instance:TestCases.TripStopDetailedTest@4b168fa9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="beforeMethod" is-config="true" duration-ms="610" started-at="2019-10-10T11:26:42 EDT" finished-at="2019-10-10T11:26:42 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TripStopDetailedTest.Verify_the_Trip_Stop_Detailed_using_DailyPeriod_functionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_the_Trip_Stop_Detailed_using_DailyPeriod_functionality()[pri:8, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="Verify_the_Trip_Stop_Detailed_using_DailyPeriod_functionality" duration-ms="40679" started-at="2019-10-10T11:26:42 EDT" description="TC_Reports_Trip Stop Detailed_009 To verify the &#039;Trip Stop Detailed&#039; using &#039;Daily (Period) functionality " finished-at="2019-10-10T11:27:23 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_the_Trip_Stop_Detailed_using_DailyPeriod_functionality -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="afterMethod" is-config="true" duration-ms="368" started-at="2019-10-10T11:27:23 EDT" finished-at="2019-10-10T11:27:24 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_the_Trip_Stop_Detailed_using_DailyPeriod_functionality status=SUCCESS method=TripStopDetailedTest.Verify_the_Trip_Stop_Detailed_using_DailyPeriod_functionality()[pri:8, instance:TestCases.TripStopDetailedTest@4b168fa9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="beforeMethod" is-config="true" duration-ms="602" started-at="2019-10-10T11:27:24 EDT" finished-at="2019-10-10T11:27:24 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TripStopDetailedTest.Verify_the_Trip_Stop_Detailed_using_WeeklyPeriod_functionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_the_Trip_Stop_Detailed_using_WeeklyPeriod_functionality()[pri:9, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="Verify_the_Trip_Stop_Detailed_using_WeeklyPeriod_functionality" duration-ms="40369" started-at="2019-10-10T11:27:24 EDT" description="TC_Reports_Trip Stop Detailed_010 To verify the &#039;Trip Stop Detailed&#039; using &#039;Weekly&#039; (Period) functionality" finished-at="2019-10-10T11:28:05 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_the_Trip_Stop_Detailed_using_WeeklyPeriod_functionality -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="afterMethod" is-config="true" duration-ms="336" started-at="2019-10-10T11:28:05 EDT" finished-at="2019-10-10T11:28:05 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_the_Trip_Stop_Detailed_using_WeeklyPeriod_functionality status=SUCCESS method=TripStopDetailedTest.Verify_the_Trip_Stop_Detailed_using_WeeklyPeriod_functionality()[pri:9, instance:TestCases.TripStopDetailedTest@4b168fa9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="beforeMethod" is-config="true" duration-ms="638" started-at="2019-10-10T11:28:05 EDT" finished-at="2019-10-10T11:28:05 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TripStopDetailedTest.Verify_the_Trip_Stop_Detailed_using_Monthly_Period_functionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_the_Trip_Stop_Detailed_using_Monthly_Period_functionality()[pri:10, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="Verify_the_Trip_Stop_Detailed_using_Monthly_Period_functionality" duration-ms="40121" started-at="2019-10-10T11:28:05 EDT" description="TC_Reports_Trip Stop Detailed_011 To Verify the &#039;Trip Stop Detailed&#039; using &#039;Monthly&#039; (Period) functionality " finished-at="2019-10-10T11:28:46 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_the_Trip_Stop_Detailed_using_Monthly_Period_functionality -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.TripStopDetailedTest@4b168fa9]" name="afterMethod" is-config="true" duration-ms="373" started-at="2019-10-10T11:28:46 EDT" finished-at="2019-10-10T11:28:46 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_the_Trip_Stop_Detailed_using_Monthly_Period_functionality status=SUCCESS method=TripStopDetailedTest.Verify_the_Trip_Stop_Detailed_using_Monthly_Period_functionality()[pri:10, instance:TestCases.TripStopDetailedTest@4b168fa9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.TripStopDetailedTest -->
      <class name="TestCases.LoginTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:TestCases.LoginTest@3ee0fea4]" name="beforeSuite" is-config="true" duration-ms="18300" started-at="2019-10-10T11:12:59 EDT" finished-at="2019-10-10T11:13:18 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.LoginTest@3ee0fea4]" name="beforeMethod" is-config="true" duration-ms="793" started-at="2019-10-10T11:13:18 EDT" finished-at="2019-10-10T11:13:18 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.LoginTest.Verify_login_page_title()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_login_page_title()[pri:0, instance:TestCases.LoginTest@3ee0fea4]" name="Verify_login_page_title" duration-ms="535" started-at="2019-10-10T11:13:18 EDT" description="TC_Login_001 To verify login page title" finished-at="2019-10-10T11:13:19 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_login_page_title -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.LoginTest@3ee0fea4]" name="afterMethod" is-config="true" duration-ms="906" started-at="2019-10-10T11:13:19 EDT" finished-at="2019-10-10T11:13:20 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_login_page_title status=SUCCESS method=LoginTest.Verify_login_page_title()[pri:0, instance:TestCases.LoginTest@3ee0fea4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.LoginTest@3ee0fea4]" name="beforeMethod" is-config="true" duration-ms="592" started-at="2019-10-10T11:13:20 EDT" finished-at="2019-10-10T11:13:20 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.LoginTest.Verify_the_login_page_URL()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_the_login_page_URL()[pri:1, instance:TestCases.LoginTest@3ee0fea4]" name="Verify_the_login_page_URL" duration-ms="3519" started-at="2019-10-10T11:13:20 EDT" description="TC_Login_002 To verify login page url" finished-at="2019-10-10T11:13:24 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_the_login_page_URL -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.LoginTest@3ee0fea4]" name="afterMethod" is-config="true" duration-ms="847" started-at="2019-10-10T11:13:24 EDT" finished-at="2019-10-10T11:13:25 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_the_login_page_URL status=SUCCESS method=LoginTest.Verify_the_login_page_URL()[pri:1, instance:TestCases.LoginTest@3ee0fea4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.LoginTest@3ee0fea4]" name="beforeMethod" is-config="true" duration-ms="603" started-at="2019-10-10T11:13:25 EDT" finished-at="2019-10-10T11:13:25 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.LoginTest.Verify_login_page_UI_fields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_login_page_UI_fields()[pri:2, instance:TestCases.LoginTest@3ee0fea4]" name="Verify_login_page_UI_fields" duration-ms="285" started-at="2019-10-10T11:13:25 EDT" description="TC_Login_003 To verify login page UI fields" finished-at="2019-10-10T11:13:26 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_login_page_UI_fields -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.LoginTest@3ee0fea4]" name="afterMethod" is-config="true" duration-ms="861" started-at="2019-10-10T11:13:26 EDT" finished-at="2019-10-10T11:13:26 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_login_page_UI_fields status=SUCCESS method=LoginTest.Verify_login_page_UI_fields()[pri:2, instance:TestCases.LoginTest@3ee0fea4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.LoginTest@3ee0fea4]" name="beforeMethod" is-config="true" duration-ms="597" started-at="2019-10-10T11:13:26 EDT" finished-at="2019-10-10T11:13:27 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.LoginTest.Verify_validation_message_with_valid_emailAddress_and_empty_password_field()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_validation_message_with_valid_emailAddress_and_empty_password_field()[pri:3, instance:TestCases.LoginTest@3ee0fea4]" name="Verify_validation_message_with_valid_emailAddress_and_empty_password_field" duration-ms="7642" started-at="2019-10-10T11:13:27 EDT" description=" TC_Login_004  To verify validation message with valid &#039;email address&#039; and empty &#039;password&#039; field" finished-at="2019-10-10T11:13:35 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_validation_message_with_valid_emailAddress_and_empty_password_field -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.LoginTest@3ee0fea4]" name="afterMethod" is-config="true" duration-ms="838" started-at="2019-10-10T11:13:35 EDT" finished-at="2019-10-10T11:13:36 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_validation_message_with_valid_emailAddress_and_empty_password_field status=SUCCESS method=LoginTest.Verify_validation_message_with_valid_emailAddress_and_empty_password_field()[pri:3, instance:TestCases.LoginTest@3ee0fea4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.LoginTest@3ee0fea4]" name="beforeMethod" is-config="true" duration-ms="586" started-at="2019-10-10T11:13:36 EDT" finished-at="2019-10-10T11:13:36 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.LoginTest.Verify_validation_message_with_valid_password_and_empty_emailAddress_field()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_validation_message_with_valid_password_and_empty_emailAddress_field()[pri:4, instance:TestCases.LoginTest@3ee0fea4]" name="Verify_validation_message_with_valid_password_and_empty_emailAddress_field" duration-ms="10610" started-at="2019-10-10T11:13:36 EDT" description="TC_Login_005 To verify validation message with valid &#039;Password&#039; and empty &#039;email address&#039; field" finished-at="2019-10-10T11:13:47 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_validation_message_with_valid_password_and_empty_emailAddress_field -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.LoginTest@3ee0fea4]" name="afterMethod" is-config="true" duration-ms="842" started-at="2019-10-10T11:13:47 EDT" finished-at="2019-10-10T11:13:48 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_validation_message_with_valid_password_and_empty_emailAddress_field status=SUCCESS method=LoginTest.Verify_validation_message_with_valid_password_and_empty_emailAddress_field()[pri:4, instance:TestCases.LoginTest@3ee0fea4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.LoginTest@3ee0fea4]" name="beforeMethod" is-config="true" duration-ms="706" started-at="2019-10-10T11:13:48 EDT" finished-at="2019-10-10T11:13:48 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.LoginTest.Verify_validation_message_with_empty_email_address_and_empty_password_field()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_validation_message_with_empty_email_address_and_empty_password_field()[pri:5, instance:TestCases.LoginTest@3ee0fea4]" name="Verify_validation_message_with_empty_email_address_and_empty_password_field" duration-ms="12427" started-at="2019-10-10T11:13:48 EDT" description="TC_Login_006 To verify validation message with empty &#039;email address&#039; and empty &#039;password&#039; field" finished-at="2019-10-10T11:14:01 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_validation_message_with_empty_email_address_and_empty_password_field -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.LoginTest@3ee0fea4]" name="afterMethod" is-config="true" duration-ms="827" started-at="2019-10-10T11:14:01 EDT" finished-at="2019-10-10T11:14:02 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_validation_message_with_empty_email_address_and_empty_password_field status=SUCCESS method=LoginTest.Verify_validation_message_with_empty_email_address_and_empty_password_field()[pri:5, instance:TestCases.LoginTest@3ee0fea4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.LoginTest@3ee0fea4]" name="beforeMethod" is-config="true" duration-ms="626" started-at="2019-10-10T11:14:02 EDT" finished-at="2019-10-10T11:14:02 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.LoginTest.Verify_validation_message_with_invalid_email_address_and_invalid_password_field()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_validation_message_with_invalid_email_address_and_invalid_password_field()[pri:6, instance:TestCases.LoginTest@3ee0fea4]" name="Verify_validation_message_with_invalid_email_address_and_invalid_password_field" duration-ms="5907" started-at="2019-10-10T11:14:02 EDT" description="TC_Login_007 To verify validation message with invalid &#039;Email address&#039; and invalid &#039;password&#039;" finished-at="2019-10-10T11:14:08 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_validation_message_with_invalid_email_address_and_invalid_password_field -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.LoginTest@3ee0fea4]" name="afterMethod" is-config="true" duration-ms="843" started-at="2019-10-10T11:14:08 EDT" finished-at="2019-10-10T11:14:09 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_validation_message_with_invalid_email_address_and_invalid_password_field status=SUCCESS method=LoginTest.Verify_validation_message_with_invalid_email_address_and_invalid_password_field()[pri:6, instance:TestCases.LoginTest@3ee0fea4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.LoginTest@3ee0fea4]" name="beforeMethod" is-config="true" duration-ms="641" started-at="2019-10-10T11:14:09 EDT" finished-at="2019-10-10T11:14:10 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.LoginTest.Verify_forgot_password_link()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_forgot_password_link()[pri:8, instance:TestCases.LoginTest@3ee0fea4]" name="Verify_forgot_password_link" duration-ms="17170" started-at="2019-10-10T11:14:10 EDT" description="TC_Login_09 To verify forgot password link " finished-at="2019-10-10T11:14:27 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_forgot_password_link -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.LoginTest@3ee0fea4]" name="afterMethod" is-config="true" duration-ms="842" started-at="2019-10-10T11:14:27 EDT" finished-at="2019-10-10T11:14:28 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_forgot_password_link status=SUCCESS method=LoginTest.Verify_forgot_password_link()[pri:8, instance:TestCases.LoginTest@3ee0fea4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.LoginTest@3ee0fea4]" name="beforeMethod" is-config="true" duration-ms="638" started-at="2019-10-10T11:14:28 EDT" finished-at="2019-10-10T11:14:28 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.LoginTest.Verify_login_functionality_with_valid_credentials_of_superAdmin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Verify_login_functionality_with_valid_credentials_of_superAdmin()[pri:10, instance:TestCases.LoginTest@3ee0fea4]" name="Verify_login_functionality_with_valid_credentials_of_superAdmin" duration-ms="57030" started-at="2019-10-10T11:14:28 EDT" description="TC_Login_11 To verify login functionality with valid credentials of super admin " finished-at="2019-10-10T11:15:25 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_login_functionality_with_valid_credentials_of_superAdmin -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestCases.LoginTest@3ee0fea4]" name="afterMethod" is-config="true" duration-ms="980" started-at="2019-10-10T11:15:25 EDT" finished-at="2019-10-10T11:15:26 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_login_functionality_with_valid_credentials_of_superAdmin status=SUCCESS method=LoginTest.Verify_login_functionality_with_valid_credentials_of_superAdmin()[pri:10, instance:TestCases.LoginTest@3ee0fea4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:TestCases.LoginTest@3ee0fea4]" name="afterSuite" is-config="true" duration-ms="957" started-at="2019-10-10T11:28:46 EDT" finished-at="2019-10-10T11:28:47 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- TestCases.LoginTest -->
    </test> <!-- Login Test -->
  </suite> <!-- TrackSYNQ Test Suite -->
</testng-results>
